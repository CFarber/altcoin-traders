{"version":3,"sources":["pricinggrid-component.jsx"],"names":["e","React","createElement","BenefitInclude","require","BenefitExclude","ConditionedIcon","props","state","PricingGridComponent","Component","cards","id","name","time","price","accessSetups","accessPicks","videoLibary","livestreams","dailyUpdates","accessToTeam","mostChosen","map","item","document","querySelectorAll","forEach","domContainer","imageProp","dataset","image","ReactDOM","render"],"mappings":"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","file":"pricinggrid-component.f97073e5.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst e = React.createElement;\nconst BenefitInclude = () => (\n  <div className=\"icon icon icon__pricing-include\">\n    <figure>\n    <img src={require('/assets/icons/check.svg')} className=\"icon--invert\" alt=\"Exclude\" />\n    </figure>\n  </div>\n)\n\nconst BenefitExclude = () => (\n  <div className=\"icon icon__pricing-exclude\">\n    <figure>\n    <img src={require('/assets/icons/x.svg')} className=\"icon--invert\" alt=\"Exclude\" />\n    </figure>\n  </div>\n)\n\nconst ConditionedIcon = (props) => {\n  const { state } = props;\n  \n  if(state === true) return <BenefitInclude/>\n  return <BenefitExclude/>\n}\n\nclass PricingGridComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: [\n        {\n          id: 0,\n          name: \"Trades only\",\n          time: \"30 days\",\n          price: \"0.015\",\n          accessSetups: true,\n          accessPicks: true,\n          videoLibary: false,\n          livestreams: false,\n          dailyUpdates: false,\n          accessToTeam: false,\n          mostChosen: false,\n        }, \n        {\n          id: 1,\n          name: \"Membership\",\n          time: \"30 days\",\n          price: \"0.022\",\n          accessSetups: true,\n          accessPicks: true,\n          videoLibary: true,\n          livestreams: true,\n          dailyUpdates: true,\n          accessToTeam: true,\n          mostChosen: false,\n        },\n        {\n          id: 2,\n          name: \"Trades only\",\n          time: \"60 days\",\n          price: \"0.056\",\n          accessSetups: true,\n          accessPicks: true,\n          videoLibary: true,\n          livestreams: true,\n          dailyUpdates: true,\n          accessToTeam: true,\n          mostChosen: true,\n        },\n        {\n          id: 3,\n          name: \"Trades only\",\n          time: \"100 days\",\n          price: \"0.0975\",\n          accessSetups: true,\n          accessPicks: true,\n          videoLibary: true,\n          livestreams: true,\n          dailyUpdates: true,\n          accessToTeam: true,\n          mostChosen: false,\n        },\n        {\n          id: 4,\n          name: \"Trades only\",\n          time: \"1 year\",\n          price: \"0.165\",\n          accessSetups: true,\n          accessPicks: true,\n          videoLibary: true,\n          livestreams: true,\n          dailyUpdates: true,\n          accessToTeam: true,\n          mostChosen: false,\n        },\n      ]\n    };\n  };\n  \n  render() { \n    return (\n      <div className=\"price-card-grid\">\n        {this.state.cards.map((item) => (\n                  <div key={item.id} className=\"price-card\">\n                  <header>\n                    <div className=\"description\">\n                    <h4 className=\"color-lightgrey font-regular\">{item.name}</h4>\n                    <h5 className=\"color-lightgrey\">{item.time}</h5>\n                    </div>\n                    <div className=\"price-bitcoin\">\n                    <div className=\"icon icon__small\">\n                      <figure>\n                        <img src={require('/assets/icons/bitcoin--blue.svg')} alt=\"Bitcoin\" />\n                      </figure>\n                    </div>\n                    <span className=\"color-lightgrey\">{item.price}</span>\n                    </div>\n                  </header>\n                  <div className=\"price-card__benefits\">\n                    <ul>\n                      <li><ConditionedIcon state={item.accessSetups} /><span className=\"color-lightgrey\">Access to trade setups</span></li>\n                      <li><ConditionedIcon state={item.accessPicks} /><span className=\"color-lightgrey\">Access to investment picks</span></li>\n                      <li><ConditionedIcon state={item.videoLibary} /><span className=\"color-lightgrey\">Trading course and extensive video libary</span></li>\n                      <li><ConditionedIcon state={item.livestreams} /><span className=\"color-lightgrey\">Interactive livestreams</span></li>\n                      <li><ConditionedIcon state={item.dailyUpdates} /><span className=\"color-lightgrey\">Daily market updates</span></li>\n                      <li><ConditionedIcon state={item.accessToTeam} /><span className=\"color-lightgrey\">24/7 access to a team of professional traders analysts</span></li>\n                    </ul>\n                  </div>\n                </div>\n        ))}\n      </div>\n    )\n}\n}\n\ndocument.querySelectorAll('#PricingGridComponent').forEach(domContainer => { \n  const imageProp = domContainer.dataset.image;\n\n  ReactDOM.render(\n    e(PricingGridComponent, {image: imageProp}), \n    domContainer);\t\n});"]}