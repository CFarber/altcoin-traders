{"version":3,"sources":["processbar-component.jsx"],"names":["e","React","createElement","ProgressBar","props","bgcolor","completed","containerStyles","height","width","backgroundColor","borderRadius","fillerStyles","paddingRight","display","justifyContent","alignItems","labelStyles","padding","color","fontWeight","Processbar","data","map","item","idx","domContainer","document","querySelector","ReactDOM","render"],"mappings":"AAAA;;AAEA,IAAMA,CAAC,GAAGC,KAAK,CAACC,aAAhB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MACrBC,OADqB,GACED,KADF,CACrBC,OADqB;AAAA,MACZC,SADY,GACEF,KADF,CACZE,SADY;AAG7B,MAAMC,eAAe,GAAG;AACtBC,IAAAA,MAAM,EAAE,EADc;AAEtBC,IAAAA,KAAK,EAAE,MAFe;AAGtBC,IAAAA,eAAe,EAAE,SAHK;AAItBC,IAAAA,YAAY,EAAE;AAJQ,GAAxB;AAOA,MAAMC,YAAY,GAAG;AACnBJ,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,KAAK,YAAKH,SAAL,MAFc;AAGnBI,IAAAA,eAAe,EAAEL,OAHE;AAInBM,IAAAA,YAAY,EAAE,SAJK;AAKnBE,IAAAA,YAAY,EAAE,EALK;AAMnBC,IAAAA,OAAO,EAAE,MANU;AAOnBC,IAAAA,cAAc,EAAE,UAPG;AAQnBC,IAAAA,UAAU,EAAE;AARO,GAArB;AAWA,MAAMC,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE,CADS;AAElBC,IAAAA,KAAK,EAAE,OAFW;AAGlBC,IAAAA,UAAU,EAAE;AAHM,GAApB;AAMA,sBACE;AAAK,IAAA,KAAK,EAAEb;AAAZ,kBACE;AAAK,IAAA,KAAK,EAAEK;AAAZ,kBACE;AAAM,IAAA,KAAK,EAAEK;AAAb,eAA8BX,SAA9B,OADF,CADF,CADF;AAOD,CAlCD;;AAqCA,IAAMe,UAAU,GAAG,SAAbA,UAAa,GAAM;AAEvB,MAAMC,IAAI,GAAG,CACX;AAAEjB,IAAAA,OAAO,EAAE,SAAX;AAAsBC,IAAAA,SAAS,EAAE;AAAjC,GADW,CAAb;AAKE,sBACE,iCACGgB,IAAI,CAACC,GAAL,CAAS,UAACC,IAAD,EAAOC,GAAP;AAAA,wBACR,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,GAAlB;AAAuB,MAAA,OAAO,EAAED,IAAI,CAACnB,OAArC;AAA8C,MAAA,SAAS,EAAEmB,IAAI,CAAClB;AAA9D,MADQ;AAAA,GAAT,CADH,CADF;AAOH,CAdD;;AAgBA,IAAMoB,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAArB;AACAC,QAAQ,CAACC,MAAT,CAAgB9B,CAAC,CAACqB,UAAD,CAAjB,EAA+BK,YAA/B","file":"processbar-component.c0db67a4.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst e = React.createElement;\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 40,\n    width: '100%',\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 50,\n  }\n\n  const fillerStyles = {\n    height: '100%',\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: 'inherit',\n    paddingRight: 16,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  }\n\n  const labelStyles = {\n    padding: 5,\n    color: 'white',\n    fontWeight: 'bold',\n  }\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\n\nconst Processbar = () => {\n\n  const data = [\n    { bgcolor: \"#5D34FF\", completed: 38 },\n  ];\n\n\n    return (\n      <div>\n        {data.map((item, idx) => (\n          <ProgressBar key={idx} bgcolor={item.bgcolor} completed={item.completed} />\n        ))}\n      </div>\n      )\n}\n\nconst domContainer = document.querySelector('#processbar');\nReactDOM.render(e(Processbar), domContainer);"]}